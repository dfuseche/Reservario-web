{
	"info": {
		"_postman_id": "383f51db-c7f1-49f6-8ab4-edc80d12b1ff",
		"name": "Reserva Tests",
		"description": "Colección de pruebas sobre el recurso Reserva",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "POST - Usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"console.log(data);\r",
							"postman.setGlobalVariable(\"new_id_usuarioLoginReserva\", data.data.insertedId);\r",
							"tests[\"No genera error en el Post\"] = responseCode.code === 201;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"Juan Diego\",\r\n    \"cedula\": 1110789456,\r\n    \"telefono\": 7564819,\r\n    \"username\": \"JuanDiegoReserva\",\r\n    \"password\": \"123456\",\r\n    \"email\": \"jd@hotmail.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/api/usuarios/",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"usuarios",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "POST - Auth/Login",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"JuanDiegoReserva\",\r\n    \"password\": \"123456\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/auth/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post restaurante",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"console.log(data);\r",
							"postman.setGlobalVariable(\"new_id_RestauranteReserva\", data.insertedId);\r",
							"tests[\"No genera error en el Post\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nit\": 256898,\r\n    \"nombre\": \"Mc donalds\",\r\n    \"direccion\": \"Cr 16 #145-31\",\r\n    \"correo\": \"df.useche@uniandes.edu.co\",\r\n    \"telefono\": 3228225845,\r\n    \"descripcion\": \"Se venden hamburguesas\",\r\n    \"tipoDeRestaurante\": \"comida rapida\",\r\n    \"capacidad\": 300,\r\n    \"numeroMesas\": 50,\r\n    \"entretenimiento\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/restaurante/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"restaurante",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear una reserva",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"postman.setGlobalVariable(\"new_id_reserva\", data.insertedId);\r",
							"tests[\"No genera error en el Post\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"idRestaurante\": \"{{new_id_RestauranteReserva}}\",\r\n\t\"numeroPersonas\": 3,\r\n    \"medioDePago\": \"EFECTIVO\",\r\n    \"fechaInicio\": \"2021-12-17T20:00:00.000+00:00\",\r\n    \"fechaFin\": \"2021-12-17T23:30:00.000+00:00\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/reservas",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"reservas"
					]
				},
				"description": "Crea una nueva reserva. El Id es inicializado por la BD y se debe ver en la respuesta. \r\n\r\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Crear una reserva 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"postman.setGlobalVariable(\"new_id_reserva2\", data.insertedId);\r",
							"tests[\"No genera error en el Post\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"idRestaurante\": \"{{new_id_RestauranteReserva}}\",\r\n\t\"numeroPersonas\": 4,\r\n    \"medioDePago\": \"EFECTIVO\",\r\n    \"fechaInicio\": \"2021-12-18T19:00:00.000+00:00\",\r\n    \"fechaFin\": \"2021-12-18T22:00:00.000+00:00\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/reservas",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"reservas"
					]
				},
				"description": "Crea otra reserva. El Id es inicializado por la BD y se debe ver en la respuesta. Esta segunda reserva se utiliza para probar la petición de consultar todas las reservas.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Obtener una reserva",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(responseBody);\r",
							"var data = JSON.parse(responseBody);\r",
							"tests[\"No genera error en el Get\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/reservas/{{new_id_reserva}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"reservas",
						"{{new_id_reserva}}"
					]
				},
				"description": "Consulta una reserva de la aplicación. La petición no tiene cuerpo. Se envía el id de la reserva deseada en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Obtener todas las reservas del usuario",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/reservas/usuario",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"reservas",
						"usuario"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener todas las reservas",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"tests[\"No genera error en el Get All\"] = responseCode.code === 200;\r",
							"tests[\"Cantidad de reservas\"] = data.length > 1;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/reservas/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"reservas",
						""
					]
				},
				"description": "Consulta todas las reservas de la aplicación. La petición no tiene cuerpo.\r\n\r\nPara la prueba, se verifica que el conjunto de reservas en la respuesta tenga mas de uno.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Editar una reserva",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(responseBody);\r",
							"var data = JSON.parse(responseBody);\r",
							"tests[\"No genera error en el Put\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"numeroPersonas\": 4,\r\n    \"medioDePago\": \"TARJETACREDITO\",\r\n    \"fechaFin\": \"2021-12-17T23:30:00.000+00:00\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/reservas/{{new_id_reserva}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"reservas",
						"{{new_id_reserva}}"
					]
				},
				"description": "Actualiza una reserva existente. Se envía el Id en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Borrar una reserva",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/reservas/{{new_id_reserva}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"reservas",
						"{{new_id_reserva}}"
					]
				},
				"description": "Borra una reserva. Se envía el id de la reserva creada anteriormente.\r\n\r\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borrar una reserva 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/reservas/{{new_id_reserva2}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"reservas",
						"{{new_id_reserva2}}"
					]
				},
				"description": "Borra una reserva. Se envía el id de la reserva creada anteriormente.\r\n\r\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Delete restaurante",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/restaurante/{{new_id_RestauranteReserva}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"restaurante",
						"{{new_id_RestauranteReserva}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - Auth/Logout",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:3000/auth/logout",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"auth",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE - Usuario",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/api/usuarios/{{new_id_usuarioLoginReserva}}",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"usuarios",
						"{{new_id_usuarioLoginReserva}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}